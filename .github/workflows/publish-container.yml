# .github/workflows/publish-container.yml
name: Publish Docker image to GHCR

on:
  push:
    # Any push to the default branch -> push the "latest" tag
    branches: [ main ]

    # Any git tag (v1.2.3, 2024.09.27, …) -> push that tag as an image tag
    tags: [ '*' ]

  schedule:
    # Every 14 days at 00:00 UTC.
    # GitHub uses POSIX cron, so “*/14” works on the *day‑of‑month* field.
    - cron: '0 0 */14 * *'

  # Manual trigger
  workflow_dispatch:

permissions:
  contents: read            # checkout the repo
  packages: write           # push to ghcr.io

jobs:
  build-and-push:
    name: Build & push multi‑arch image to GHCR
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up QEMU (for arm64 builds on the amd64 runner)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      # 3. Set up Docker Buildx (multi‑arch builder)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4. Authenticate to GHCR
      # No extra secret needed – the built‑in GITHUB_TOKEN has the
      # required scope because of the `packages: write` permission.
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 5. Compute which tag(s) we should push
      - name: Compute image tags
        id: tags
        run: |
          IMAGE="ghcr.io/${{ github.repository_owner }}/${{ github.repository }}"

          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            # Tag push → use the git tag as image tag (e.g. v1.2.3)
            echo "TAGS=${IMAGE}:${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
            echo "PUSH_LATEST=false" >> $GITHUB_OUTPUT
          else
            # Branch push (only main triggers this workflow)
            echo "TAGS=${IMAGE}:latest" >> $GITHUB_OUTPUT
            echo "PUSH_LATEST=true" >> $GITHUB_OUTPUT
          fi

      # 6. Build the multi‑arch image and push it
      - name: Build & push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.tags.outputs.TAGS }}

      # 7. (Optional) Echo what has been published – handy for logs
      # -----------------------------------------------------------
      - name: Summary
        if: always()
        run: |
          echo "Image(s) pushed:"
          echo "   ${{ steps.tags.outputs.TAGS }}"
